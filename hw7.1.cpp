//Руденко Павел    КМБ2     вариант 12
#include <iostream> 
#include <clocale>  
#include <iomanip>
#include <fstream>
#include <map>

using namespace std;

const int limit = 4; //ограничение вывода (количество разрядов максимальной позициии в файле)

void Cin_File(double *a,int size)  //Функия для записи файла в массив
{ 

    ifstream file("H:\\hw7.1\\1.txt");

    for (int i = 1; i <= size; i++)
    {
        file >> a[i];
    }

    file.close(); 
}

void Cout_Mass(double *a,int size) //функция для вывода массива
{ 
    cout << "      Вывод массива:" << endl;
    for (int i = 1; i <= size; i++)
    {
        cout <<  "[" << setw(limit) << i << "]   " <<  a[i] << endl;
    }
}

void Function(double *a,int &size) //функция для выполнения условия задачи
{ 
    int K,M,mini,Counter;
    mini = 1410065407;
    int newSize = 1;
    cout << "Введите M (верхнюю границу): ";
    cin >> M;
    cout << "Введите K (нижнюю границу): ";
    cin >> K;

    for (int i = 1; i < size+1; ++i)
    {
        if (((a[i]<=K) || (a[i]>=M)))
        {
            a[newSize] = a[i];
            newSize++;
        }
    }

    cout << "      Вывод массива после удаления элементов:" << endl;
    for (int i = 1; i < newSize; ++i)
    {
        cout <<  "[" << setw(limit) << i << "]   " << setw(6) << a[i] << endl;
        if (a[i]<mini)
        {
            mini=a[i];
        }
    }

    cout << "Минимальный член полученного массива: " << mini << endl;
    int i = 1;
    while (i < newSize)
    {
        if (a[i]==mini)
        {
            Counter = newSize;
            while (Counter > i)
            {
                a[Counter+1]=a[Counter];
                Counter=Counter-1;
            }
            a[i+1]=10;
            newSize++;
        }
    ++i;
    }

    cout << "      Вывод массива после добавления элементов:" << endl;
    for (int i = 1; i < newSize; ++i)
    {
        cout <<"[" << setw(limit) << i << "]   " << a[i] << endl;
    }
    size=newSize-1; //изменение размера массива на новый
}

void Help()  //функция вызова меню
{
        string space = "    ";
        cout << "-------------------------" << "Menu" << endl;
        cout <<"[!]     Рекомендуется выполнять операции в верной последовательности:" << endl << " Работу с элементами массива производить только после его заполнения" << endl << endl;
        cout <<  space << "-r:  заполнение элементов массива из файла" << endl;
        cout <<  space << "-p:  вывод элементов массива на экран" << endl;
        cout <<  space << "-f:  выполнение задачи 12 варианта " << endl;
        cout <<  space << "-h:  повторный вывод меню" << endl;
        cout <<  space << "-s:  прекратить выполнение программы" << endl << endl;
}

int main() 
{
    map<string, int> map;

    map["-s"] = 0;  //различные операторы, которые программа воспринимает в виде цифр (для работы с switch)
    map["-r"] = 1;
    map["-p"] = 2;
    map["-f"] = 3;
    map["-h"] = 4;

    string space = "    "; //пробел
    double* a;
    double ch;
    ifstream file("H:\\hw7.1\\1.txt"); //открываем файл по пути к нему
    int mass_size = 0;
    int Counter = 0;
    int map_value = -1;

    while (file >> ch)  //узнаем количество чисел (каждое новое число- новая строка) в файле 
        Counter++;

    for (;;)  //выполняем цикл до тех пор, пока не будет введён нужный параметр или остановлена программа
    {
        cout <<"[!]     Для старта работы с программой нажмите ENTER и напишите '-h' для вызова меню" << endl; //просим пользователя совершить действия для начала работы

        map_value = -1;
        while (map_value != 0)  
        {
            string input;
            getline(cin, input); //map перенимает вводимые значения и затем изменяет их на заданные ранее
            map_value = map.find(input)->second;

            switch (map_value)
            {
                case 0: //конец программы
                    return 0;
                    break;

                case 1: //ввод значений в массив из файла
                    cout << "Чисел в файле : " << Counter << endl;
                    cout << "Количество элементов массива: " ;
                    cin >> mass_size;
                    a = new double[mass_size];
                    if ((mass_size > Counter) || (mass_size < 0))
                    {
                        cout << "Некорректно задан размер массива!" << endl;
                        return -1;
                    }
                    Cin_File(a, mass_size);
                    break;


                case 2: //вывод массива
                    Cout_Mass(a, mass_size);
                    break;


                case 3: //выполнение задания
                    Function(a, mass_size);
                    break;

                case 4: //вызов меню
                    Help();
                    break;
            }
        }
    }
}

/*
------------------------ТЕСТ 1
{ДАН ФАЙЛ "1.txt" ИЗ 40 ЧИСЕЛ:
 4
5.5
6.6
12
56
2
89
5
32
2
5
68
98
101
20
11
4
6
54
5
65
4
5
68
7
20
5555
21
2222
20
4564
6666
8888
20
5654
3
46
20
5132
5}

[!]     Для старта работы с программой нажмите ENTER и напишите '-h' для вызова меню

-h
-------------------------Menu
[!]     Рекомендуется выполнять операции в верной последовательности:
 Работу с элементами массива производить только после его заполнения

    -r:  заполнение элементов массива из файла
    -p:  вывод элементов массива на экран
    -f:  выполнение задачи 12 варианта
    -h:  повторный вывод меню
    -s:  прекратить выполнение программы

-r
Чисел в файле : 40
Количество элементов массива: 40
-p
      Вывод массива:
[  1]   4
[  2]   5.5
[  3]   6.6
[  4]   12
[  5]   56
[  6]   2
[  7]   89
[  8]   5
[  9]   32
[ 10]   2
[ 11]   5
[ 12]   68
[ 13]   98
[ 14]   101
[ 15]   20
[ 16]   11
[ 17]   4
[ 18]   6
[ 19]   54
[ 20]   5
[ 21]   65
[ 22]   4
[ 23]   5
[ 24]   68
[ 25]   7
[ 26]   20
[ 27]   5555
[ 28]   21
[ 29]   2222
[ 30]   20
[ 31]   4564
[ 32]   6666
[ 33]   8888
[ 34]   20
[ 35]   5654
[ 36]   3
[ 37]   46
[ 38]   20
[ 39]   5132
[ 40]   5
-f
Введите M (верхнюю границу): 66
Введите K (нижнюю границу): 3
      Вывод массива после удаления элементов:
[  1]        2
[  2]       89
[  3]        2
[  4]       68
[  5]       98
[  6]      101
[  7]       68
[  8]     5555
[  9]     2222
[ 10]     4564
[ 11]     6666
[ 12]     8888
[ 13]     5654
[ 14]        3
[ 15]     5132
Минимальный член полученного массива: 2
      Вывод массива после добавления элементов:
[  1]   2
[  2]   10
[  3]   89
[  4]   2
[  5]   10
[  6]   68
[  7]   98
[  8]   101
[  9]   68
[ 10]   5555
[ 11]   2222
[ 12]   4564
[ 13]   6666
[ 14]   8888
[ 15]   5654
[ 16]   3
[ 17]   5132
-p
      Вывод массива:
[  1]   2
[  2]   10
[  3]   89
[  4]   2
[  5]   10
[  6]   68
[  7]   98
[  8]   101
[  9]   68
[ 10]   5555
[ 11]   2222
[ 12]   4564
[ 13]   6666
[ 14]   8888
[ 15]   5654
[ 16]   3
[ 17]   5132
-f
Введите M (верхнюю границу): 6665
Введите K (нижнюю границу): 0
      Вывод массива после удаления элементов:
[  1]     6666
[  2]     8888
Минимальный член полученного массива: 6666
      Вывод массива после добавления элементов:
[  1]   6666
[  2]   10
[  3]   8888
-p
      Вывод массива:
[  1]   6666
[  2]   10
[  3]   8888
-f
Введите M (верхнюю границу): 7777
Введите K (нижнюю границу): 0
      Вывод массива после удаления элементов:
[  1]     8888
Минимальный член полученного массива: 8888
      Вывод массива после добавления элементов:
[  1]   8888
[  2]   10
-p
      Вывод массива:
[  1]   8888
[  2]   10
-s
PS C:\Users\pasya> 
 

*/